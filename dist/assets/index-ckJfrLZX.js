(function(){const o=document.createElement("link").relList;if(o&&o.supports&&o.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))t(e);new MutationObserver(e=>{for(const r of e)if(r.type==="childList")for(const s of r.addedNodes)s.tagName==="LINK"&&s.rel==="modulepreload"&&t(s)}).observe(document,{childList:!0,subtree:!0});function i(e){const r={};return e.integrity&&(r.integrity=e.integrity),e.referrerPolicy&&(r.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?r.credentials="include":e.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function t(e){if(e.ep)return;e.ep=!0;const r=i(e);fetch(e.href,r)}})();function u(l){const o=l.querySelectorAll("animated-images-frame"),i=[];for(const t of o)if(t.querySelector("img"))i.push(t);else{const r=t.getAttribute("src");if(r){console.log("Creating image element");const s=document.createElement("img");s.addEventListener("load",()=>{t.setAttribute("data-state","loaded"),t.dispatchEvent(new CustomEvent("load"))},{once:!0}),s.addEventListener("error",()=>{t.setAttribute("data-state","error")},{once:!0}),t.hidden=!0,s.src=r,t.appendChild(s),i.push(t)}}return i}const c=class c extends HTMLElement{constructor(){super(...arguments),this.abortController=new AbortController,this.mutationObserver=new MutationObserver(()=>{this.mutationObserver.disconnect(),this.setActiveFrame(Number.parseFloat(this.getAttribute("progress")||"0"))})}connectedCallback(){this.isConnected&&this.setActiveFrame(Number.parseFloat(this.getAttribute("progress")||"0"))}disconnectedCallback(){}attributeChangedCallback(o,i,t){const e=Number.parseFloat(t||"0");this.setActiveFrame(e)}setActiveFrame(o){this.abortController.abort(),this.abortController=new AbortController;const t=this.abortController.signal,e=u(this),r=Math.floor(o/100*e.length)%e.length,s=e[r];if(!s){this.mutationObserver.observe(this,{childList:!0});return}const d=()=>{if(!t.aborted){this.hideFallback();for(const n of e)n===s?n.removeAttribute("hidden"):n.setAttribute("hidden","")}};s.getAttribute("data-state")==="loaded"?d():s.addEventListener("load",d)}hideFallback(){const o=this.querySelector("animated-images-fallback");o&&!o.hidden&&(o.hidden=!0)}};c.observedAttributes=["progress"];let a=c;customElements.define("animated-images",a);
